create database pizzahut;	

create table orders(
order_id int not null,
order_date date not null,
order_time time not null,
primary key(order_id)
);


create table order_details(
order_details_id int not null,
order_id int not null,
pizza_id text not null,
quantity int not null,
primary key(order_details_id)
);


-- Q1(Total orders placed):-

select count(order_id) as total_orders
from orders;



-- Q2(Total revenue generated from pizza sales):-

select (o.quantity*p.price) as total_revenue,p.pizza_id
from order_details as  o join  pizzas as p
on o.pizza_id=p.pizza_id;




-- Q3(highest priced pizza):-

select p.price as highest_price ,pt.name
from pizzas as p join pizza_types as pt
on p.pizza_type_id=pt.pizza_type_id
order by p.price desc limit 1;


-- Q4(Most common pizza size ordred):-

select p.size,count(od.order_details_id)
from pizzas as p join order_details as od
on p.pizza_id=od.pizza_id
group by p.size;




-- Q5(Top 5 most order pizza names along with their quantities):-

SELECT 
    pt.name, COUNT(od.quantity) AS orders_quantity
FROM
    pizza_types AS pt
        JOIN
    pizzas AS p ON pt.pizza_type_id = p.pizza_type_id
        JOIN
    order_details AS od ON od.pizza_id = p.pizza_id
GROUP BY pt.name
ORDER BY orders_quantity DESC
LIMIT 5;



-- INTERMEDIATE QUESTIONS 
 
-- Q6(Find total quantity of each pizza category ordered):-

SELECT 
    pt.category, COUNT(od.quantity) AS orders_quantity
FROM
    pizza_types AS pt
        JOIN
    pizzas AS p ON pt.pizza_type_id = p.pizza_type_id
        JOIN
    order_details AS od ON od.pizza_id = p.pizza_id
GROUP BY pt.category
ORDER BY orders_quantity DESC
LIMIT 5; 

-- Q7(Find distribution of orders by hour of day):-

select hour(order_time) as time , count(order_id) as order_count 
from orders 
group by time
order by time ;


-- Q8(Find category wise distribution of pizzas):-

select category ,count(name) 
from pizza_types
group by category;


-- Q9(Group orders by date and Find average number of pizzas order per day):-

select round(avg(quantity),0) as average from(
select o.order_date ,sum(od.quantity) as quantity
from orders as o join order_details as od
on o.order_id=od.order_id
group by o.order_date) as order_quantity;



-- Q10(Find top 3 most ordered pizza types based on revenue):-

select pt.name, sum(od.quantity*p.price) as revenue
from pizza_types as pt join pizzas as p
on pt.pizza_type_id=p.pizza_type_id
join order_details as od 
on od.pizza_id=p.pizza_id
group by pt.name 
order by revenue;



-- HARD QUESTIONS

-- Q11(Calculate percentage contribution of each pizza type to total revenue):-

select pt.category, sum(od.quantity*p.price) as revenue
from pizza_types as pt join pizzas as p
on pt.pizza_type_id=p.pizza_type_id
join order_details as od 
on od.pizza_id=p.pizza_id
group by pt.category 
order by revenue;


-- Q12(Analyse cumulative revenue generated over time):-

select order_date,sum(revenue) over(order by order_date) as cum_revenue 
from ( select orders.order_date,sum(order_details.quantity*pizzas.price) as revenue
from order_details join pizzas
on order_details.pizza_id=pizzas.pizza_id
join orders 
on orders.order_id=order_details.order_id
group by orders.order_date) as sales 


-- Q13(Determine the top 3 most ordered pizza types based on revenue for each pizza category):-

select name,revenue from
(select category ,name,revenue, 
rank() over(partition by category order by revenue desc) as rn 
from
(select pizza_types.category, pizza_types.name ,
sum((order_details.quantity)*(pizzas.price)) as revenue 
from pizza_types join pizzas
on pizza_types.pizza_type_id=pizzas.pizza_type_id
join order_details
on order_details.pizza_id=pizzas.pizza_id
group by pizza_types.category,pizza_types.name) as a) as b
where rn<=3
